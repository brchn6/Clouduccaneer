name: CloudBuccaneer CI/CD

on:
  push:
    branches: [ main, master, develop, feature/* ]
  pull_request:
    branches: [ main, master, develop ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12']
        exclude:
          # Reduce matrix size for faster CI
          - os: windows-latest
            python-version: '3.9'
          - os: macos-latest
            python-version: '3.9'

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/pyproject.toml', '**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install system dependencies (Ubuntu)
      if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg

    - name: Install system dependencies (macOS)
      if: matrix.os == 'macos-latest'
      run: |
        brew install ffmpeg

    - name: Install system dependencies (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        # Note: yt-dlp requires ffmpeg, but we'll skip for now in CI
        echo "FFmpeg installation skipped on Windows for CI speed"

    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -e .
        python -m pip install pytest pytest-cov pytest-mock pytest-xdist pytest-html
        # Try to upgrade security-related packages where possible
        python -m pip install --upgrade urllib3 requests anyio || echo "Some security upgrades skipped due to conflicts"

    - name: Run smoke tests
      run: |
        python -c "from cb.cli import app; print('âœ… CLI import successful')"
        python -m cb.cli --help

    - name: Run unit tests
      run: |
        python -m pytest tests/test_utils.py tests/test_renamer.py -v --cov=cb --cov-report=xml

    - name: Run CLI tests
      run: |
        python -m pytest tests/test_cli.py -v --tb=short

    - name: Run wrapper tests
      run: |
        python -m pytest tests/test_ytwrap.py tests/test_spotwrap.py -v --tb=short

    - name: Run integration tests
      run: |
        python -m pytest tests/test_integration.py -v --tb=short

    - name: Run existing tests
      run: |
        python -m pytest tests/test_summarize.py -v

    - name: Upload coverage to Codecov
      if: matrix.os == 'ubuntu-latest' && matrix.python-version == '3.11'
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella

  lint:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install linting tools
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 black isort mypy

    - name: Run flake8
      run: |
        flake8 src/cb --max-line-length=100 --ignore=E203,W503

    - name: Check formatting with black
      run: |
        black --check --diff src/cb

    - name: Check import sorting with isort
      run: |
        isort --check-only --diff src/cb

    - name: Run type checking with mypy
      run: |
        mypy src/cb --ignore-missing-imports
      continue-on-error: true  # Type checking is not strict yet

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install security tools and dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install -e .
        python -m pip install safety bandit
        # Try to upgrade non-conflicting security packages
        python -m pip install --upgrade urllib3 requests anyio || true
        echo "Note: Some security upgrades may be skipped due to spotdl dependency constraints"

    - name: Run safety check
      run: |
        python -m safety scan

    - name: Run bandit security check
      run: |
        bandit -r src/cb -f json -o bandit-report.json -c .bandit
      continue-on-error: true

    - name: Upload bandit report
      uses: actions/upload-artifact@v3
      with:
        name: bandit-report
        path: bandit-report.json

  build:
    runs-on: ubuntu-latest
    needs: [test, lint]
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install build tools
      run: |
        python -m pip install --upgrade pip
        python -m pip install build twine

    - name: Build package
      run: |
        python -m build

    - name: Check package
      run: |
        twine check dist/*

    - name: Upload build artifacts
      uses: actions/upload-artifact@v3
      with:
        name: dist
        path: dist/

  test-install:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Download build artifacts
      uses: actions/download-artifact@v3
      with:
        name: dist
        path: dist/

    - name: Test installation from wheel
      run: |
        pip install dist/*.whl
        cb --help

    - name: Test uninstallation
      run: |
        pip uninstall -y cloudbuccaneer
